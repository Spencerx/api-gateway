stages:
  - build
  - deploy
  - production


.create_tag: &create_tag
  before_script:
    - export TAG="${CI_COMMIT_SHA:0:8}"



docker-build-test:
  <<: *create_tag
  services:
    - docker:dind
  image: docker:latest
  stage: build
  tags:
    - prebuild
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
    - docker build --pull -t ${CI_REGISTRY_IMAGE}:${TAG} .
    - docker rmi --force except
  except:
    - develop
    - master


build-and-push-develop:
  <<: *create_tag
  services:
    - docker:dind
  image: docker:latest
  stage: build
  tags:
    - build
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
    - docker build --pull -t ${CI_REGISTRY_IMAGE}:${TAG} .
    - docker push "${CI_REGISTRY_IMAGE}:${TAG}"
  only:
    - develop

deploy-to-kubernetes-develop:
  <<: *create_tag
  image: mastanggt/kubectl:latest
  stage: deploy
  tags:
    - deploy
  script:
    - export ZONE=SAND
    - export IMAGE="$CI_REGISTRY_IMAGE:${TAG}"
    - echo $SANDBOX_KUBE_CONFIG | base64 -d > admin.conf
    - cat deploy-template.yaml | envsubst | envsubst > deploy.yaml
    - kubectl --kubeconfig=admin.conf replace -f deploy.yaml
  only:
    - develop

deploy to production:
  <<: *create_tag
  image: mastanggt/kubectl:latest
  stage: production
  tags: [build]
  when: manual
  script:
    - export ZONE=PROD
    - export IMAGE="$CI_REGISTRY_IMAGE:${TAG}"
    - echo $PRODUCTION_KUBE_CONFIG | base64 -d > admin.conf
    - cat deploy-template.yaml | envsubst | envsubst > deploy.yaml
    - cat deploy.yaml
    - exit 0
    - kubectl --kubeconfig=admin.conf replace -f deploy.yaml
